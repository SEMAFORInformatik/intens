#!/usr/bin/env python
import pathlib
import tractools.report.repgen
import tractools.report.plot
import logging
import logging.config
import platform
import shutil
import base64

logo = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00@\x00\x00\x00 \x08\x02\x00\x00\x00-\xff\xe9\xd3\x00\x00\x00\xb2IDATx\xda\xd5\xd7I\x0e\xc0 \x0cC\xd1\xd0\xfb\xdf9\xdd\xb4\xea\xa0N\xa6!\xb1\xb3\x8e\xd0\xfb\xac\xa0\xb9\xbb)\xcf\x04m\xb7\x86\xad\x8f;\xba\'\x80P\x0f\x04p\xea\xbf\x06\xd0\xea?\x050\xeb\xdf\x03\xc8\xf5/\x01\xfc\xfa\xa7\x00\t\xfdm\x80\x8a\xfe:@H\x7f\x11\xa0\xa5?\x07\xc8\xe9\x0f\x01\x8a\xfa-@T\xbf\x04\xe8\xea\xcd\xac\xa1\xff\x01\x88\xe4\x0e\xd5"\x8e\x95\x8d\xfd\x07\xa0\x01o\x06\xd9\xde\x1d=* G?* M?$ S\x1f\x1f\x90\xac\x0f\x0e\xc8\xd7G\x06\x94\xe8\xc3\x02\xaa\xf41\x01\x85\xfa\x80\x80Z\xfd\xdf\x80r\xfd\xaf\x00\x06}\x7f\x00\x89\xbe3\x80Go\x1d\xcfi\xb6\x99\x01\x90$S:\xd1\x13\x17\x17\x00\x00\x00<tEXtComment\x00 Image generated by GNU Ghostscript (device=pnmraw)\n\xcc\xcc\xb6\x85\x00\x00\x00\x00IEND\xaeB`\x82'

urlprefix = '/' if platform.system() == 'Windows' else ''


logger = logging.getLogger('reportgen')


def plot_shortCircuit(workdir, cogging={}):
    try:
        shortcircuit_plot = tractools.report.plot.ShortCircuitPlot(cogging)
        shfilename = pathlib.Path(workdir) / 'shortcircuit.png'
        shortcircuit_plot.plot(shfilename)
        return shfilename
    except KeyError as e:
        logger.error("Error: %s", e)
        pass
    return ''


def get_logo(workdir):
    logofile = pathlib.Path(workdir) / 'logo.png'
    if logofile.exists():
        return logofile
    try:
        bitmapsdir = pathlib.Path(__file__).parents[2] / 'bitmaps'
        logofile = bitmapsdir / 'logo.png'
        if logofile.exists():
            return logofile
    except IndexError:
        pass
    logofile = pathlib.Path(workdir) / 'logo.png'
    logofile.write_bytes(logo)
    return logofile


def encode_base64(img_path, image_type='png'):
    encoding = f'data:image/{image_type};charset=utf-8;base64,'
    with open(img_path, 'rb') as img:
        return encoding + base64.b64encode(img.read()).decode('utf-8')


def main(pmMotor, shortCircuit, result):
    workdir = '.'
    try:
        scplot = tractools.repgen.plot_shortCircuit(workdir, result)
    except KeyError:
        scplot = ""

    content = dict(
        logo=encode_base64(str(get_logo(workdir))),
        pmMotor=pmMotor,
        shortCircuit=shortCircuit,
        shortCircuit_plot=encode_base64(scplot),
        result=result)

    try:
        htmlrepgen = tractools.report.repgen.HtmlReportGenerator()
        doc = htmlrepgen.generate('report', content)
        return doc

    except ValueError as e:
        logger.error(e)
        return dict(error=str(e))
    return {}
