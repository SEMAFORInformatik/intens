
#include "utils/utils.h"

#define TOLERANZ 0.000001

/* --------------------------------------------------------------------------- */
/* runden --                                                                   */
/* --------------------------------------------------------------------------- */

double runden( double d, int i ){
  return abrunden( d * pow(10.,i) + 0.5 ) / pow(10.,i);
}

/* --------------------------------------------------------------------------- */
/* runden5 --                                                                  */
/* --------------------------------------------------------------------------- */

double runden5( double d ){
  double x = runden( d * 20, 0 );
  return runden( x / 20, 2 );
}

/* --------------------------------------------------------------------------- */
/* aufrunden --                                                                */
/* --------------------------------------------------------------------------- */

double aufrunden( double d ){
  return ceil( d - TOLERANZ );
}

/* --------------------------------------------------------------------------- */
/* abrunden --                                                                 */
/* --------------------------------------------------------------------------- */

double abrunden( double d ){
  return floor( d + TOLERANZ );
}

/* --------------------------------------------------------------------------- */
/* isInteger --                                                                */
/* --------------------------------------------------------------------------- */

bool isInteger( double d ){
  return ( aufrunden( d ) - d <= TOLERANZ );
}

/* --------------------------------------------------------------------------- */
/* indent --                                                                   */
/* --------------------------------------------------------------------------- */

std::ostream& indent( int i, std::ostream &ostr ){
  for( int x = 0; x < i; ++x ) ostr << " ";
  return ostr;
}

/* --------------------------------------------------------------------------- */
/* mysetenv --                                                                 */
/* --------------------------------------------------------------------------- */

void mysetenv(const char *name, const char *value) {
#ifndef _WIN32
	setenv(name, value, 1);
#else
	int len = strlen(name)+1+strlen(value)+1;
	char *str = (char *)malloc(len);
	sprintf(str, "%s=%s", name, value);
	if(putenv(str) != EXIT_SUCCESS)
		free(str);
#endif
}
